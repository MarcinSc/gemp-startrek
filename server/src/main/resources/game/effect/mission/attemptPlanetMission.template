{
  "com.gempukku.startrek.server.game.effect.EffectMemoryComponent": {
    "memoryType": "attemptPlanetMission",
    "memory": {
      "missionId": "[missionId]"
    }
  },
  "com.gempukku.startrek.server.game.effect.EffectRevealedCardsComponent": {},
  "com.gempukku.startrek.game.mission.AttemptedMissionComponent": {},
  "com.gempukku.startrek.game.zone.ObjectOnStackComponent": {
    "type": "missionAttempt"
  },
  "com.gempukku.startrek.server.game.effect.GameEffectComponent": {
    "type": "sequence",
    "data": {
      "memory": "attemptPlanetMissionSequence",
      "actions": [
        {
          "type": "placeAttemptedMissionOnStack"
        },
        {
          "type": "assignAttemptingPersonnel",
          "player": "currentPlayer",
          "memory": "attemptingPersonnel",
          "filter": "type(Personnel),unstopped,isInMission(memory(missionId))"
        },
        {
          "type": "memorizeAmount",
          "memory": "attemptingPersonnelCount",
          "amount": "cardMatchingCount(memory(attemptingPersonnel))"
        },
        {
          "type": "memorizeAmount",
          "memory": "dilemmaDifference",
          "amount": "minus(memory(attemptingPersonnelCount),cardMatchingCount(type(Dilemma),attachedTo(memory(missionId))))"
        },
        {
          "type": "createDilemmaStack",
          "player": "nextPlayer",
          "amountMemory": "dilemmaDifference",
          "costResultMemory": "costResult",
          "dilemmaMemory": "dilemmaCards"
        },
        {
          "type": "processDecision",
          "player": "nextPlayer",
          "decisionType": "setupDilemmas",
          "memoryData": {
            "personnelCount": "attemptingPersonnelCount",
            "costCount": "costResult",
            "dilemmaCardIds": "dilemmaCards"
          }
        },
        {
          "type": "repeatUntil",
          "condition": "or(dilemmaStackEmpty,equals(cardMatchingCount(attemptingPersonnel),0))",
          "action": {
            "type": "sequence",
            "memory": "facingDilemmaSequence",
            "actions": [
              {
                "type": "blah"
              }
            ]
          }
        },
        {
          "type": "flipRevealedCards"
        },
        {
          "type": "removeEffectFromStack"
        }
      ]
    }
  }
}
